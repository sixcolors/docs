"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([[1106],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,g=c["".concat(p,".").concat(d)]||c[d]||u[d]||l;return n?a.createElement(g,i(i({ref:t},m),{},{components:n})):a.createElement(g,i({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2531:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={id:"ctx",title:"\ud83e\udde0 Ctx",description:"The Ctx struct represents the Context which hold the HTTP request and response. It has methods for the request query string, parameters, body, HTTP headers, and so on.",sidebar_position:2},i=void 0,o={unversionedId:"api/ctx",id:"version-v1.x/api/ctx",title:"\ud83e\udde0 Ctx",description:"The Ctx struct represents the Context which hold the HTTP request and response. It has methods for the request query string, parameters, body, HTTP headers, and so on.",source:"@site/versioned_docs/version-v1.x/api/ctx.md",sourceDirName:"api",slug:"/api/ctx",permalink:"/v1.x/api/ctx",draft:!1,tags:[],version:"v1.x",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1680259004,formattedLastUpdatedAt:"Mar 31, 2023",sidebarPosition:2,frontMatter:{id:"ctx",title:"\ud83e\udde0 Ctx",description:"The Ctx struct represents the Context which hold the HTTP request and response. It has methods for the request query string, parameters, body, HTTP headers, and so on.",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\ud83d\ude80 App",permalink:"/v1.x/api/app"},next:{title:"\ud83e\uddec Middleware",permalink:"/v1.x/api/middleware"}},p={},s=[{value:"Accepts",id:"accepts",level:2},{value:"Append",id:"append",level:2},{value:"Attachment",id:"attachment",level:2},{value:"App",id:"app",level:2},{value:"BaseURL",id:"baseurl",level:2},{value:"Body",id:"body",level:2},{value:"BodyParser",id:"bodyparser",level:2},{value:"ClearCookie",id:"clearcookie",level:2},{value:"Context",id:"context",level:2},{value:"Cookie",id:"cookie",level:2},{value:"Cookies",id:"cookies",level:2},{value:"Download",id:"download",level:2},{value:"Fasthttp",id:"fasthttp",level:2},{value:"Error",id:"error",level:2},{value:"Format",id:"format",level:2},{value:"FormFile",id:"formfile",level:2},{value:"FormValue",id:"formvalue",level:2},{value:"Fresh",id:"fresh",level:2},{value:"Get",id:"get",level:2},{value:"Hostname",id:"hostname",level:2},{value:"IP",id:"ip",level:2},{value:"IPs",id:"ips",level:2},{value:"Is",id:"is",level:2},{value:"JSON",id:"json",level:2},{value:"JSONP",id:"jsonp",level:2},{value:"Links",id:"links",level:2},{value:"Locals",id:"locals",level:2},{value:"Location",id:"location",level:2},{value:"Method",id:"method",level:2},{value:"MultipartForm",id:"multipartform",level:2},{value:"Next",id:"next",level:2},{value:"OriginalURL",id:"originalurl",level:2},{value:"Params",id:"params",level:2},{value:"Path",id:"path",level:2},{value:"Protocol",id:"protocol",level:2},{value:"Query",id:"query",level:2},{value:"QueryParser",id:"queryparser",level:2},{value:"Range",id:"range",level:2},{value:"Redirect",id:"redirect",level:2},{value:"Render",id:"render",level:2},{value:"Route",id:"route",level:2},{value:"SaveFile",id:"savefile",level:2},{value:"Secure",id:"secure",level:2},{value:"Send",id:"send",level:2},{value:"SendFile",id:"sendfile",level:2},{value:"SendStatus",id:"sendstatus",level:2},{value:"Set",id:"set",level:2},{value:"Stale",id:"stale",level:2},{value:"Status",id:"status",level:2},{value:"Subdomains",id:"subdomains",level:2},{value:"Type",id:"type",level:2},{value:"Vary",id:"vary",level:2},{value:"Write",id:"write",level:2},{value:"XHR",id:"xhr",level:2}],m={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"accepts"},"Accepts"),(0,r.kt)("p",null,"Checks, if the specified ",(0,r.kt)("strong",{parentName:"p"},"extensions")," or ",(0,r.kt)("strong",{parentName:"p"},"content")," ",(0,r.kt)("strong",{parentName:"p"},"types")," are acceptable."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Based on the request\u2019s ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept"},"Accept")," HTTP header.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Accepts(types ...string)                 string\nc.AcceptsCharsets(charsets ...string)      string\nc.AcceptsEncodings(encodings ...string)    string\nc.AcceptsLanguages(langs ...string)        string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// Accept: text/*, application/json\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.Accepts("html")             // "html"\n  c.Accepts("text/html")        // "text/html"\n  c.Accepts("json", "text")     // "json"\n  c.Accepts("application/json") // "application/json"\n  c.Accepts("image/png")        // ""\n  c.Accepts("png")              // ""\n})\n')),(0,r.kt)("p",null,"Fiber provides similar functions for the other accept headers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'// Accept-Charset: utf-8, iso-8859-1;q=0.2\n// Accept-Encoding: gzip, compress;q=0.2\n// Accept-Language: en;q=0.8, nl, ru\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.AcceptsCharsets("utf-16", "iso-8859-1") \n  // "iso-8859-1"\n\n  c.AcceptsEncodings("compress", "br") \n  // "compress"\n\n  c.AcceptsLanguages("pt", "nl", "ru") \n  // "nl"\n})\n')),(0,r.kt)("h2",{id:"append"},"Append"),(0,r.kt)("p",null,"Appends the specified ",(0,r.kt)("strong",{parentName:"p"},"value")," to the HTTP response header field."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If the header is ",(0,r.kt)("strong",{parentName:"p"},"not")," already set, it creates the header with the specified value.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Append(field, values ...string)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Append("Link", "http://google.com", "http://localhost")\n  // => Link: http://localhost, http://google.com\n\n  c.Append("Link", "Test")\n  // => Link: http://localhost, http://google.com, Test\n})\n')),(0,r.kt)("h2",{id:"attachment"},"Attachment"),(0,r.kt)("p",null,"Sets the HTTP response ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition"},"Content-Disposition")," header field to ",(0,r.kt)("inlineCode",{parentName:"p"},"attachment"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Attachment(file ...string)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Attachment()\n  // => Content-Disposition: attachment\n\n  c.Attachment("./upload/images/logo.png")\n  // => Content-Disposition: attachment; filename="logo.png"\n  // => Content-Type: image/png\n})\n')),(0,r.kt)("h2",{id:"app"},"App"),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"app#new"},"*","App")," reference so you could easily access all application settings."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.App() *App\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/bodylimit", func(c *fiber.Ctx) {\n  bodylimit := c.App().Settings.BodyLimit\n  c.Send(bodylimit)\n})\n')),(0,r.kt)("h2",{id:"baseurl"},"BaseURL"),(0,r.kt)("p",null,"Returns the base URL ","(",(0,r.kt)("strong",{parentName:"p"},"protocol")," + ",(0,r.kt)("strong",{parentName:"p"},"host"),")"," as a ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.BaseURL() string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// GET https://example.com/page#chapter-1\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.BaseURL() // https://example.com\n})\n')),(0,r.kt)("h2",{id:"body"},"Body"),(0,r.kt)("p",null,"Returns the request ",(0,r.kt)("strong",{parentName:"p"},"body"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Body() string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// curl -X POST http://localhost:8080 -d user=john\n\napp.Post("/", func(c *fiber.Ctx) {\n  // Get raw body from POST request:\n  c.Body() // user=john\n})\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Returned value is only valid within the handler. Do not store any references.",(0,r.kt)("br",{parentName:"em"}),"Make copies or use the")," ",(0,r.kt)("a",{parentName:"p",href:"app#settings"},(0,r.kt)("em",{parentName:"a"},(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("inlineCode",{parentName:"strong"},"Immutable"))))," ",(0,r.kt)("em",{parentName:"p"},"setting instead.")," ",(0,r.kt)("a",{parentName:"p",href:"../#zero-allocation"},(0,r.kt)("em",{parentName:"a"},"Read more...")))),(0,r.kt)("h2",{id:"bodyparser"},"BodyParser"),(0,r.kt)("p",null,"Binds the request body to a struct. ",(0,r.kt)("inlineCode",{parentName:"p"},"BodyParser")," supports decoding query parameters and the following content types based on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," header:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"application/json")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"application/xml")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"application/x-www-form-urlencoded")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"multipart/form-data"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.BodyParser(out interface{}) error\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// Field names should start with an uppercase letter\ntype Person struct {\n    Name string `json:"name" xml:"name" form:"name"`\n    Pass string `json:"pass" xml:"pass" form:"pass"`\n}\n\napp.Post("/", func(c *fiber.Ctx) {\n        p := new(Person)\n\n        if err := c.BodyParser(p); err != nil {\n            log.Fatal(err)\n        }\n\n        log.Println(p.Name) // john\n        log.Println(p.Pass) // doe\n})\n// Run tests with the following curl commands\n\n// curl -X POST -H "Content-Type: application/json" --data "{\\"name\\":\\"john\\",\\"pass\\":\\"doe\\"}" localhost:3000\n\n// curl -X POST -H "Content-Type: application/xml" --data "<login><name>john</name><pass>doe</pass></login>" localhost:3000\n\n// curl -X POST -H "Content-Type: application/x-www-form-urlencoded" --data "name=john&pass=doe" localhost:3000\n\n// curl -X POST -F name=john -F pass=doe http://localhost:3000\n\n// curl -X POST "http://localhost:3000/?name=john&pass=doe"\n')),(0,r.kt)("h2",{id:"clearcookie"},"ClearCookie"),(0,r.kt)("p",null,"Expire a client cookie ","(",(0,r.kt)("em",{parentName:"p"},"or all cookies if left empty",")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.ClearCookie(key ...string)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  // Clears all cookies:\n  c.ClearCookie()\n\n  // Expire specific cookie by name:\n  c.ClearCookie("user")\n\n  // Expire multiple cookies by names:\n  c.ClearCookie("token", "session", "track_id", "version")\n})\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Web browsers and other compliant clients will only clear the cookie if the given options are identical to those when creating the cookie, excluding expires and maxAge. ClearCookie will not set these values for you - a technique similar to the one shown below should be used to ensure your cookie is deleted.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/set", func(c *fiber.Ctx) {\n    c.Cookie(&fiber.Cookie{\n        Name:     "token",\n        Value:    "randomvalue",\n        Expires:  time.Now().Add(24 * time.Hour),\n        HTTPOnly: true,\n        SameSite: "lax",\n    })\n})\n\napp.Get("/delete", func(c *fiber.Ctx) {\n    c.Cookie(&fiber.Cookie{\n        Name:     "token",\n        // Set expiry date to the past\n        Expires:  time.Now().Add(-(time.Hour * 2)),\n        HTTPOnly: true,\n        SameSite: "lax",\n    })\n})\n')),(0,r.kt)("h2",{id:"context"},"Context"),(0,r.kt)("p",null,"Returns context.Context that carries a deadline, a cancellation signal, and other values across API boundaries."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"c.Context() context.Context\n")),(0,r.kt)("h2",{id:"cookie"},"Cookie"),(0,r.kt)("p",null,"Set cookie"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"c.Cookie(*Cookie)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type Cookie struct {\n    Name     string\n    Value    string\n    Path     string\n    Domain   string\n    Expires  time.Time\n    Secure   bool\n    HTTPOnly bool\n    SameSite string // lax, strict, none\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  // Create cookie\n  cookie := new(fiber.Cookie)\n  cookie.Name = "john"\n  cookie.Value = "doe"\n  cookie.Expires = time.Now().Add(24 * time.Hour)\n\n  // Set cookie\n  c.Cookie(cookie)\n})\n')),(0,r.kt)("h2",{id:"cookies"},"Cookies"),(0,r.kt)("p",null,"Get cookie value by key, you could pass an optional default value that will be returned if the cookie key does not exist."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Signatures")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"c.Cookies(key string, defaultValue ...string) string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  // Get cookie by key:\n  c.Cookies("name")         // "john"\n  c.Cookies("empty", "doe") // "doe"\n})\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Returned value is only valid within the handler. Do not store any references.",(0,r.kt)("br",{parentName:"em"}),"Make copies or use the")," ",(0,r.kt)("a",{parentName:"p",href:"app#settings"},(0,r.kt)("em",{parentName:"a"},(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("inlineCode",{parentName:"strong"},"Immutable"))))," ",(0,r.kt)("em",{parentName:"p"},"setting instead.")," ",(0,r.kt)("a",{parentName:"p",href:"../#zero-allocation"},(0,r.kt)("em",{parentName:"a"},"Read more...")))),(0,r.kt)("h2",{id:"download"},"Download"),(0,r.kt)("p",null,"Transfers the file from path as an ",(0,r.kt)("inlineCode",{parentName:"p"},"attachment"),"."),(0,r.kt)("p",null,"Typically, browsers will prompt the user to download. By default, the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition"},"Content-Disposition")," header ",(0,r.kt)("inlineCode",{parentName:"p"},"filename=")," parameter is the file path ","(",(0,r.kt)("em",{parentName:"p"},"this typically appears in the browser dialog"),")","."),(0,r.kt)("p",null,"Override this default with the ",(0,r.kt)("strong",{parentName:"p"},"filename")," parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Download(path, filename ...string) error\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  if err := c.Download("./files/report-12345.pdf"); err != nil {\n    c.Next(err) // Pass err to fiber\n  }\n  // => Download report-12345.pdf\n\n  if err := c.Download("./files/report-12345.pdf", "report.pdf"); err != nil {\n    c.Next(err) // Pass err to fiber\n  }\n  // => Download report.pdf\n})\n')),(0,r.kt)("h2",{id:"fasthttp"},"Fasthttp"),(0,r.kt)("p",null,"You can still ",(0,r.kt)("strong",{parentName:"p"},"access")," and use all ",(0,r.kt)("strong",{parentName:"p"},"Fasthttp")," methods and properties."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Signature")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Please read the ",(0,r.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/valyala/fasthttp?tab=doc"},"Fasthttp Documentation")," for more information.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'app.Get("/", func(c *fiber.Ctx) {\n  c.Fasthttp.Request.Header.Method()\n  // => []byte("GET")\n\n  c.Fasthttp.Response.Write([]byte("Hello, World!"))\n  // => "Hello, World!"\n})\n')),(0,r.kt)("h2",{id:"error"},"Error"),(0,r.kt)("p",null,"This contains the error information that thrown by a panic or passed via the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gofiber/docs/tree/8d965e1e05fb67f965934586c78335ef29f52128/context/README.md#error"},(0,r.kt)("inlineCode",{parentName:"a"},"Next(err)"))," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Error() error\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'func main() {\n  app := fiber.New()\n  app.Post("/api/register", func (c *fiber.Ctx) {\n    if err := c.JSON(&User); err != nil {\n      c.Next(err)\n    }\n  })\n  app.Get("/api/user", func (c *fiber.Ctx) {\n    if err := c.JSON(&User); err != nil {\n      c.Next(err)\n    }\n  })\n  app.Put("/api/update", func (c *fiber.Ctx) {\n    if err := c.JSON(&User); err != nil {\n      c.Next(err)\n    }\n  })\n  app.Use("/api", func(c *fiber.Ctx) {\n    c.Set("Content-Type", "application/json")\n    c.Status(500).Send(c.Error())\n  })\n  app.Listen(1337)\n}\n')),(0,r.kt)("h2",{id:"format"},"Format"),(0,r.kt)("p",null,"Performs content-negotiation on the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept"},"Accept")," HTTP header. It uses ",(0,r.kt)("a",{parentName:"p",href:"#accepts"},"Accepts")," to select a proper format."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If the header is ",(0,r.kt)("strong",{parentName:"p"},"not")," specified or there is ",(0,r.kt)("strong",{parentName:"p"},"no")," proper format, ",(0,r.kt)("strong",{parentName:"p"},"text/plain")," is used.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Format(body interface{})\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  // Accept: text/plain\n  c.Format("Hello, World!")\n  // => Hello, World!\n\n  // Accept: text/html\n  c.Format("Hello, World!")\n  // => <p>Hello, World!</p>\n\n  // Accept: application/json\n  c.Format("Hello, World!")\n  // => "Hello, World!"\n})\n')),(0,r.kt)("h2",{id:"formfile"},"FormFile"),(0,r.kt)("p",null,"MultipartForm files can be retrieved by name, the ",(0,r.kt)("strong",{parentName:"p"},"first")," file from the given key is returned."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.FormFile(name string) (*multipart.FileHeader, error)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Post("/", func(c *fiber.Ctx) {\n  // Get first file from form field "document":\n  file, err := c.FormFile("document")\n\n  // Check for errors:\n  if err == nil {\n    // Save file to root directory:\n    c.SaveFile(file, fmt.Sprintf("./%s", file.Filename))\n  }\n})\n')),(0,r.kt)("h2",{id:"formvalue"},"FormValue"),(0,r.kt)("p",null,"Any form values can be retrieved by name, the ",(0,r.kt)("strong",{parentName:"p"},"first")," value from the given key is returned."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.FormValue(name string) string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Post("/", func(c *fiber.Ctx) {\n  // Get first value from form field "name":\n  c.FormValue("name")\n  // => "john" or "" if not exist\n})\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Returned value is only valid within the handler. Do not store any references.",(0,r.kt)("br",{parentName:"em"}),"Make copies or use the")," ",(0,r.kt)("a",{parentName:"p",href:"app#settings"},(0,r.kt)("em",{parentName:"a"},(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("inlineCode",{parentName:"strong"},"Immutable"))))," ",(0,r.kt)("em",{parentName:"p"},"setting instead.")," ",(0,r.kt)("a",{parentName:"p",href:"../#zero-allocation"},(0,r.kt)("em",{parentName:"a"},"Read more...")))),(0,r.kt)("h2",{id:"fresh"},"Fresh"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://expressjs.com/en/4x/api.html#req.fresh"},"https://expressjs.com/en/4x/api.html","#","req.fresh")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Not implemented yet, pull requests are welcome!")),(0,r.kt)("h2",{id:"get"},"Get"),(0,r.kt)("p",null,"Returns the HTTP request header specified by the field."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The match is ",(0,r.kt)("strong",{parentName:"p"},"case-insensitive"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Get(field string) string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Get("Content-Type") // "text/plain"\n  c.Get("CoNtEnT-TypE") // "text/plain"\n  c.Get("something")    // ""\n})\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Returned value is only valid within the handler. Do not store any references.",(0,r.kt)("br",{parentName:"em"}),"Make copies or use the")," ",(0,r.kt)("a",{parentName:"p",href:"app#settings"},(0,r.kt)("em",{parentName:"a"},(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("inlineCode",{parentName:"strong"},"Immutable"))))," ",(0,r.kt)("em",{parentName:"p"},"setting instead.")," ",(0,r.kt)("a",{parentName:"p",href:"../#zero-allocation"},(0,r.kt)("em",{parentName:"a"},"Read more...")))),(0,r.kt)("h2",{id:"hostname"},"Hostname"),(0,r.kt)("p",null,"Returns the hostname derived from the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host"},"Host")," HTTP header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Hostname() string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// GET http://google.com/search\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.Hostname() // "google.com"\n})\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Returned value is only valid within the handler. Do not store any references.",(0,r.kt)("br",{parentName:"em"}),"Make copies or use the")," ",(0,r.kt)("a",{parentName:"p",href:"app#settings"},(0,r.kt)("em",{parentName:"a"},(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("inlineCode",{parentName:"strong"},"Immutable"))))," ",(0,r.kt)("em",{parentName:"p"},"setting instead.")," ",(0,r.kt)("a",{parentName:"p",href:"../#zero-allocation"},(0,r.kt)("em",{parentName:"a"},"Read more...")))),(0,r.kt)("h2",{id:"ip"},"IP"),(0,r.kt)("p",null,"Returns the remote IP address of the request."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.IP() string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.IP() // "127.0.0.1"\n})\n')),(0,r.kt)("h2",{id:"ips"},"IPs"),(0,r.kt)("p",null,"Returns an array of IP addresses specified in the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For"},"X-Forwarded-For")," request header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.IPs() []string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// X-Forwarded-For: proxy1, 127.0.0.1, proxy3\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.IPs() // ["proxy1", "127.0.0.1", "proxy3"]\n})\n')),(0,r.kt)("h2",{id:"is"},"Is"),(0,r.kt)("p",null,"Returns the matching ",(0,r.kt)("strong",{parentName:"p"},"content type"),", if the incoming request\u2019s ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type"},"Content-Type")," HTTP header field matches the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/ru/docs/Web/HTTP/Basics_of_HTTP/MIME_types"},"MIME type")," specified by the type parameter."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If the request has ",(0,r.kt)("strong",{parentName:"p"},"no")," body, it returns ",(0,r.kt)("strong",{parentName:"p"},"false"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Is(t string) bool\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// Content-Type: text/html; charset=utf-8\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.Is("html")  // true\n  c.Is(".html") // true\n  c.Is("json")  // false\n})\n')),(0,r.kt)("h2",{id:"json"},"JSON"),(0,r.kt)("p",null,"Converts any ",(0,r.kt)("strong",{parentName:"p"},"interface")," or ",(0,r.kt)("strong",{parentName:"p"},"string")," to JSON using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/json-iterator/go"},"Jsoniter"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"JSON also sets the content header to ",(0,r.kt)("strong",{parentName:"p"},"application/json"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.JSON(v interface{}) error\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'type SomeStruct struct {\n  Name string\n  Age  uint8\n}\n\napp.Get("/json", func(c *fiber.Ctx) {\n  // Create data struct:\n  data := SomeStruct{\n    Name: "Grame",\n    Age:  20,\n  }\n\n  if err := c.JSON(data); err != nil {\n    c.Status(500).Send(err)\n    return\n  }\n  // => Content-Type: application/json\n  // => "{"Name": "Grame", "Age": 20}"\n\n  if err := c.JSON(fiber.Map{\n    "name": "Grame",\n    "age": 20,\n  }); err != nil {\n    c.Status(500).Send(err)\n    return\n  }\n  // => Content-Type: application/json\n  // => "{"name": "Grame", "age": 20}"\n})\n')),(0,r.kt)("h2",{id:"jsonp"},"JSONP"),(0,r.kt)("p",null,"Sends a JSON response with JSONP support. This method is identical to ",(0,r.kt)("a",{parentName:"p",href:"#json"},"JSON"),", except that it opts-in to JSONP callback support. By default, the callback name is simply callback."),(0,r.kt)("p",null,"Override this by passing a ",(0,r.kt)("strong",{parentName:"p"},"named string")," in the method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.JSONP(v interface{}, callback ...string) error\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'type SomeStruct struct {\n  name string\n  age  uint8\n}\n\napp.Get("/", func(c *fiber.Ctx) {\n  // Create data struct:\n  data := SomeStruct{\n    name: "Grame",\n    age:  20,\n  }\n\n  c.JSONP(data)\n  // => callback({"name": "Grame", "age": 20})\n\n  c.JSONP(data, "customFunc")\n  // => customFunc({"name": "Grame", "age": 20})\n})\n')),(0,r.kt)("h2",{id:"links"},"Links"),(0,r.kt)("p",null,"Joins the links followed by the property to populate the response\u2019s ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Link"},"Link")," HTTP header field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Links(link ...string)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Link(\n    "http://api.example.com/users?page=2", "next",\n    "http://api.example.com/users?page=5", "last",\n  )\n  // Link: <http://api.example.com/users?page=2>; rel="next",\n  //       <http://api.example.com/users?page=5>; rel="last"\n})\n')),(0,r.kt)("h2",{id:"locals"},"Locals"),(0,r.kt)("p",null,"A method that stores variables scoped to the request and, therefore, are available only to the routes that match the request."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This is useful if you want to pass some ",(0,r.kt)("strong",{parentName:"p"},"specific")," data to the next middleware.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Locals(key string, value ...interface{}) interface{}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Use(func(c *fiber.Ctx) {\n  c.Locals("user", "admin")\n  c.Next()\n})\n\napp.Get("/admin", func(c *fiber.Ctx) {\n  if c.Locals("user") == "admin" {\n    c.Status(200).Send("Welcome, admin!")\n  } else {\n    c.SendStatus(403) // => 403 Forbidden\n  }\n})\n')),(0,r.kt)("h2",{id:"location"},"Location"),(0,r.kt)("p",null,"Sets the response ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Location"},"Location")," HTTP header to the specified path parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Location(path string)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Post("/", func(c *fiber.Ctx) {\n  c.Location("http://example.com")\n  c.Location("/foo/bar")\n})\n')),(0,r.kt)("h2",{id:"method"},"Method"),(0,r.kt)("p",null,"Returns a string corresponding to the HTTP method of the request: ",(0,r.kt)("inlineCode",{parentName:"p"},"GET"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"PUT"),", and so on.",(0,r.kt)("br",{parentName:"p"}),"\n","Optionally, you could override the method by passing a string."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Method(override ...string) string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Post("/", func(c *fiber.Ctx) {\n  c.Method() // "POST"\n})\n')),(0,r.kt)("h2",{id:"multipartform"},"MultipartForm"),(0,r.kt)("p",null,"To access multipart form entries, you can parse the binary with ",(0,r.kt)("inlineCode",{parentName:"p"},"MultipartForm()"),". This returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"map[string][]string"),", so given a key, the value will be a string slice."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.MultipartForm() (*multipart.Form, error)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Post("/", func(c *fiber.Ctx) {\n  // Parse the multipart form:\n  if form, err := c.MultipartForm(); err == nil {\n    // => *multipart.Form\n\n    if token := form.Value["token"]; len(token) > 0 {\n      // Get key value:\n      fmt.Println(token[0])\n    }\n\n    // Get all files from "documents" key:\n    files := form.File["documents"]\n    // => []*multipart.FileHeader\n\n    // Loop through files:\n    for _, file := range files {\n      fmt.Println(file.Filename, file.Size, file.Header["Content-Type"][0])\n      // => "tutorial.pdf" 360641 "application/pdf"\n\n      // Save the files to disk:\n      c.SaveFile(file, fmt.Sprintf("./%s", file.Filename))\n    }\n  }\n})\n')),(0,r.kt)("h2",{id:"next"},"Next"),(0,r.kt)("p",null,"When ",(0,r.kt)("strong",{parentName:"p"},"Next")," is called, it executes the next method in the stack that matches the current route. You can pass an error struct within the method that will end the chaining and call the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gofiber/docs/tree/aa2680660c0b661b8e9d215b32cb03e766277131/api/error-handling.md"},"error handler"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Next(err ...error)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  fmt.Println("1st route!")\n  c.Next()\n})\n\napp.Get("*", func(c *fiber.Ctx) {\n  fmt.Println("2nd route!")\n  c.Next()\n})\n\napp.Get("/", func(c *fiber.Ctx) {\n  fmt.Println("3rd route!")\n  c.Send("Hello, World!")\n})\n')),(0,r.kt)("h2",{id:"originalurl"},"OriginalURL"),(0,r.kt)("p",null,"Returns the original request URL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.OriginalURL() string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// GET http://example.com/search?q=something\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.OriginalURL() // "/search?q=something"\n})\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Returned value is only valid within the handler. Do not store any references.",(0,r.kt)("br",{parentName:"em"}),"Make copies or use the")," ",(0,r.kt)("a",{parentName:"p",href:"app#settings"},(0,r.kt)("em",{parentName:"a"},(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("inlineCode",{parentName:"strong"},"Immutable"))))," ",(0,r.kt)("em",{parentName:"p"},"setting instead.")," ",(0,r.kt)("a",{parentName:"p",href:"../#zero-allocation"},(0,r.kt)("em",{parentName:"a"},"Read more...")))),(0,r.kt)("h2",{id:"params"},"Params"),(0,r.kt)("p",null,"Method can be used to get the route parameters, you could pass an optional default value that will be returned if the param key does not exist."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Defaults to empty string ","(",(0,r.kt)("inlineCode",{parentName:"p"},'""'),")",", if the param ",(0,r.kt)("strong",{parentName:"p"},"doesn't")," exist.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Params(param string, defaultValue ...string) string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// GET http://example.com/user/fenny\n\napp.Get("/user/:name", func(c *fiber.Ctx) {\n  c.Params("name")      // "fenny"\n  c.Params("age", "21") // "21"\n})\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Returned value is only valid within the handler. Do not store any references.",(0,r.kt)("br",{parentName:"em"}),"Make copies or use the")," ",(0,r.kt)("a",{parentName:"p",href:"app#settings"},(0,r.kt)("em",{parentName:"a"},(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("inlineCode",{parentName:"strong"},"Immutable"))))," ",(0,r.kt)("em",{parentName:"p"},"setting instead.")," ",(0,r.kt)("a",{parentName:"p",href:"../#zero-allocation"},(0,r.kt)("em",{parentName:"a"},"Read more...")),"_","_")),(0,r.kt)("h2",{id:"path"},"Path"),(0,r.kt)("p",null,"Contains the path part of the request URL. Optionally, you could override the path by passing a string."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Path(override ...string) string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// GET http://example.com/users?sort=desc\n\napp.Get("/users", func(c *fiber.Ctx) {\n  c.Path() // "/users"\n})\n')),(0,r.kt)("h2",{id:"protocol"},"Protocol"),(0,r.kt)("p",null,"Contains the request protocol string: ",(0,r.kt)("inlineCode",{parentName:"p"},"http")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"https")," for ",(0,r.kt)("strong",{parentName:"p"},"TLS")," requests."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Protocol() string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// GET http://example.com\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.Protocol() // "http"\n})\n')),(0,r.kt)("h2",{id:"query"},"Query"),(0,r.kt)("p",null,"This property is an object containing a property for each query string parameter in the route, you could pass an optional default value that will be returned if the query key does not exist."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If there is ",(0,r.kt)("strong",{parentName:"p"},"no")," query string, it returns an ",(0,r.kt)("strong",{parentName:"p"},"empty string"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Query(parameter string, defaultValue ...string) string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// GET http://example.com/shoes?order=desc&brand=nike\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.Query("order")         // "desc"\n  c.Query("brand")         // "nike"\n  c.Query("empty", "nike") // "nike"\n})\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Returned value is only valid within the handler. Do not store any references.",(0,r.kt)("br",{parentName:"em"}),"Make copies or use the")," ",(0,r.kt)("a",{parentName:"p",href:"app#settings"},(0,r.kt)("em",{parentName:"a"},(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("inlineCode",{parentName:"strong"},"Immutable"))))," ",(0,r.kt)("em",{parentName:"p"},"setting instead.")," ",(0,r.kt)("a",{parentName:"p",href:"../#zero-allocation"},(0,r.kt)("em",{parentName:"a"},"Read more...")))),(0,r.kt)("h2",{id:"queryparser"},"QueryParser"),(0,r.kt)("p",null,"This method is similar to ",(0,r.kt)("a",{parentName:"p",href:"#bodyparser"},"BodyParser"),", but for query parameters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.QueryParser(out interface{}) error\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// Field names should start with an uppercase letter\ntype Person struct {\n    Name     string     `query:"name"`\n    Pass     string     `query:"pass"`\n    Products []string   `query:"products"`\n}\n\napp.Post("/", func(c *fiber.Ctx) {\n        p := new(Person)\n\n        if err := c.QueryParser(p); err != nil {\n            log.Fatal(err)\n        }\n\n        log.Println(p.Name)     // john\n        log.Println(p.Pass)     // doe\n        log.Println(p.Products) // [shoe, hat]\n})\n// Run tests with the following curl command\n\n// curl -X POST "http://localhost:3000/?name=john&pass=doe&products=shoe,hat"\n')),(0,r.kt)("h2",{id:"range"},"Range"),(0,r.kt)("p",null,"A struct containing the type and a slice of ranges will be returned."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Range(int size)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// Range: bytes=500-700, 700-900\napp.Get("/", func(c *fiber.Ctx) {\n  b := c.Range(1000)\n  if b.Type == "bytes" {\n      for r := range r.Ranges {\n      fmt.Println(r)\n      // [500, 700]\n    }\n  }\n})\n')),(0,r.kt)("h2",{id:"redirect"},"Redirect"),(0,r.kt)("p",null,"Redirects to the URL derived from the specified path, with specified status, a positive integer that corresponds to an HTTP status code."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If ",(0,r.kt)("strong",{parentName:"p"},"not")," specified, status defaults to ",(0,r.kt)("strong",{parentName:"p"},"302 Found"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Redirect(path string, status ...int)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/coffee", func(c *fiber.Ctx) {\n  c.Redirect("/teapot")\n})\n\napp.Get("/teapot", func(c *fiber.Ctx) {\n  c.Status(fiber.StatusTeapot).Send("\ud83c\udf75 short and stout \ud83c\udf75")\n})\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="More examples"',title:'"More','examples"':!0},'app.Get("/", func(c *fiber.Ctx) {\n  c.Redirect("/foo/bar")\n  c.Redirect("../login")\n  c.Redirect("http://example.com")\n  c.Redirect("http://example.com", 301)\n})\n')),(0,r.kt)("h2",{id:"render"},"Render"),(0,r.kt)("p",null,"Renders a view with data and sends a ",(0,r.kt)("inlineCode",{parentName:"p"},"text/html")," response. By default ",(0,r.kt)("inlineCode",{parentName:"p"},"Render")," uses the default ",(0,r.kt)("a",{parentName:"p",href:"https://golang.org/pkg/html/template/"},(0,r.kt)("strong",{parentName:"a"},"Go Template engine")),". If you want to use another View engine, please take a look at our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gofiber/template"},(0,r.kt)("strong",{parentName:"a"},"Template middleware")),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Render(file string, data interface{}, layout ...string) error\n")),(0,r.kt)("h2",{id:"route"},"Route"),(0,r.kt)("p",null,"Returns the matched ",(0,r.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/gofiber/fiber?tab=doc#Route"},"Route")," struct."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Route() *Route\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// http://localhost:8080/hello\n\nhandler := func(c *fiber.Ctx) {\n  r := c.Route()\n  fmt.Println(r.Method, r.Path, r.Params, r.Handlers)\n  // GET /hello/:name handler [name] \n}\n\napp.Get("/hello/:name", handler )\n')),(0,r.kt)("h2",{id:"savefile"},"SaveFile"),(0,r.kt)("p",null,"Method is used to save ",(0,r.kt)("strong",{parentName:"p"},"any")," multipart file to disk."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.SaveFile(fh *multipart.FileHeader, path string)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Post("/", func(c *fiber.Ctx) {\n  // Parse the multipart form:\n  if form, err := c.MultipartForm(); err == nil {\n    // => *multipart.Form\n\n    // Get all files from "documents" key:\n    files := form.File["documents"]\n    // => []*multipart.FileHeader\n\n    // Loop through files:\n    for _, file := range files {\n      fmt.Println(file.Filename, file.Size, file.Header["Content-Type"][0])\n      // => "tutorial.pdf" 360641 "application/pdf"\n\n      // Save the files to disk:\n      c.SaveFile(file, fmt.Sprintf("./%s", file.Filename))\n    }\n  }\n})\n')),(0,r.kt)("h2",{id:"secure"},"Secure"),(0,r.kt)("p",null,"A boolean property that is ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," , if a ",(0,r.kt)("strong",{parentName:"p"},"TLS")," connection is established."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Secure() bool\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// Secure() method is equivalent to:\nc.Protocol() == "https"\n')),(0,r.kt)("h2",{id:"send"},"Send"),(0,r.kt)("p",null,"Sets the HTTP response body. The ",(0,r.kt)("strong",{parentName:"p"},"Send")," body can be of any type."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Send ",(0,r.kt)("strong",{parentName:"p"},"doesn't")," append like the ",(0,r.kt)("a",{parentName:"p",href:"https://fiber.wiki/context#write"},"Write")," method.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Send(body ...interface{})\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Send("Hello, World!")         // => "Hello, World!"\n  c.Send([]byte("Hello, World!")) // => "Hello, World!"\n  c.Send(123)                     // => 123\n})\n')),(0,r.kt)("p",null,"Fiber also provides ",(0,r.kt)("inlineCode",{parentName:"p"},"SendBytes")," ,",(0,r.kt)("inlineCode",{parentName:"p"},"SendString")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"SendStream")," methods for raw inputs."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Use this if you ",(0,r.kt)("strong",{parentName:"p"},"don't need")," type assertion, recommended for ",(0,r.kt)("strong",{parentName:"p"},"faster")," performance.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.SendBytes(b []byte)\nc.SendString(s string)\nc.SendStream(r io.Reader, s ...int)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.SendByte([]byte("Hello, World!"))\n  // => "Hello, World!"\n\n  c.SendString("Hello, World!")\n  // => "Hello, World!"\n\n  c.SendStream(bytes.NewReader([]byte("Hello, World!")))\n  // => "Hello, World!"\n})\n')),(0,r.kt)("h2",{id:"sendfile"},"SendFile"),(0,r.kt)("p",null,"Transfers the file from the given path. Sets the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type"},"Content-Type")," response HTTP header field based on the ",(0,r.kt)("strong",{parentName:"p"},"filenames")," extension."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Method use ",(0,r.kt)("strong",{parentName:"p"},"gzipping")," by default, set it to ",(0,r.kt)("strong",{parentName:"p"},"true")," to disable.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.SendFile(path string, compress ...bool) error\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/not-found", func(c *fiber.Ctx) {\n  if err := c.SendFile("./public/404.html"); err != nil {\n    c.Next(err) // pass err to ErrorHandler\n  }\n\n  // Enable compression\n  if err := c.SendFile("./static/index.html", true); err != nil {\n    c.Next(err) // pass err to ErrorHandler\n  }\n})\n')),(0,r.kt)("h2",{id:"sendstatus"},"SendStatus"),(0,r.kt)("p",null,"Sets the status code and the correct status message in the body, if the response body is ",(0,r.kt)("strong",{parentName:"p"},"empty"),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can find all used status codes and messages ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gofiber/fiber/blob/dffab20bcdf4f3597d2c74633a7705a517d2c8c2/utils.go#L183-L244"},"here"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.SendStatus(status int)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/not-found", func(c *fiber.Ctx) {\n  c.SendStatus(415)\n  // => 415 "Unsupported Media Type"\n\n  c.Send("Hello, World!")\n  c.SendStatus(415)\n  // => 415 "Hello, World!"\n})\n')),(0,r.kt)("h2",{id:"set"},"Set"),(0,r.kt)("p",null,"Sets the response\u2019s HTTP header field to the specified ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Set(field, value string)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Set("Content-Type", "text/plain")\n  // => "Content-type: text/plain"\n})\n')),(0,r.kt)("h2",{id:"stale"},"Stale"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://expressjs.com/en/4x/api.html#req.fresh"},"https://expressjs.com/en/4x/api.html","#","req.fresh")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Not implemented yet, pull requests are welcome!")),(0,r.kt)("h2",{id:"status"},"Status"),(0,r.kt)("p",null,"Sets the HTTP status for the response."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Method is a ",(0,r.kt)("strong",{parentName:"p"},"chainable"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Status(status int)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Status(200)\n  c.Status(400).Send("Bad Request")\n  c.Status(404).SendFile("./public/gopher.png")\n})\n')),(0,r.kt)("h2",{id:"subdomains"},"Subdomains"),(0,r.kt)("p",null,"Returns a string slice of subdomains in the domain name of the request."),(0,r.kt)("p",null,"The application property subdomain offset, which defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"2"),", is used for determining the beginning of the subdomain segments."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Subdomains(offset ...int) []string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// Host: "tobi.ferrets.example.com"\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.Subdomains()  // ["ferrets", "tobi"]\n  c.Subdomains(1) // ["tobi"]\n})\n')),(0,r.kt)("h2",{id:"type"},"Type"),(0,r.kt)("p",null,"Sets the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type"},"Content-Type")," HTTP header to the MIME type listed ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nginx/nginx/blob/master/conf/mime.types"},"here")," specified by the file ",(0,r.kt)("strong",{parentName:"p"},"extension"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Type(t string) string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Type(".html") // => "text/html"\n  c.Type("html")  // => "text/html"\n  c.Type("json")  // => "application/json"\n  c.Type("png")   // => "image/png"\n})\n')),(0,r.kt)("h2",{id:"vary"},"Vary"),(0,r.kt)("p",null,"Adds the given header field to the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Vary"},"Vary")," response header. This will append the header, if not already listed, otherwise leaves it listed in the current location."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Multiple fields are ",(0,r.kt)("strong",{parentName:"p"},"allowed"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Vary(field ...string)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Vary("Origin")     // => Vary: Origin\n  c.Vary("User-Agent") // => Vary: Origin, User-Agent\n\n  // No duplicates\n  c.Vary("Origin") // => Vary: Origin, User-Agent\n\n  c.Vary("Accept-Encoding", "Accept")\n  // => Vary: Origin, User-Agent, Accept-Encoding, Accept\n})\n')),(0,r.kt)("h2",{id:"write"},"Write"),(0,r.kt)("p",null,"Appends ",(0,r.kt)("strong",{parentName:"p"},"any")," input to the HTTP body response."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.Write(body ...interface{})\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'app.Get("/", func(c *fiber.Ctx) {\n  c.Write("Hello, ")         // => "Hello, "\n  c.Write([]byte("World! ")) // => "Hello, World! "\n  c.Write(123)               // => "Hello, World! 123"\n})\n')),(0,r.kt)("h2",{id:"xhr"},"XHR"),(0,r.kt)("p",null,"A Boolean property, that is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", if the request\u2019s ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers"},"X-Requested-With")," header field is ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"},"XMLHttpRequest"),", indicating that the request was issued by a client library ","(","such as ",(0,r.kt)("a",{parentName:"p",href:"https://api.jquery.com/jQuery.ajax/"},"jQuery"),")","."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Signature"',title:'"Signature"'},"c.XHR() bool\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Example"',title:'"Example"'},'// X-Requested-With: XMLHttpRequest\n\napp.Get("/", func(c *fiber.Ctx) {\n  c.XHR() // true\n})\n')))}u.isMDXComponent=!0}}]);